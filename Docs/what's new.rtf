The User Interface Application Block provides you with a number of features that will help you develop User Interface Process Components, and therefore distributed applications, more efficiently. 

The following features were in the first version of UIP and continue to be part of UIP version 2.

-	Web session resume – Allows users to save information in a browser, so that next time they start a browser session, they can continue from where they left off. 
-	Web session transfer – Helps one user to suspend a session, and another user to pick it up on another computer. Also allows you to suspend a session on one device, and resume it on a different type of device.
-	Reuse of code between application types – Helps you port the user interface process control logic from one type of application to another (for example, from a Windows application to a Web application).
-	Development of discrete tasks – Helps you develop encapsulated tasks (for example, a Register User task and a Checkout task) that can be linked together to complete a job. You can pass information between tasks as required (for example, you can pass user details to the Checkout task).
-	State persistence providers – Allows you to store and retrieve state from a SQL Server database, Web Session object, or from memory.


The following features are new to UIP version 2:

-	Expanded navigation management – Gives you a variety of options for specifying the transitions between views in Windows-based applications and Web applications. Each navigator provides a different level of locking the user into the pre-defined flow of transitioning between views. In the previous version of the UIP Application Block, navigation management was provided solely by the navigation graph. In UIP version 2, the navigation graph is one of several navigation options.
-	Additional state persistence providers – Gives you the ability to store and retrieve state from isolated storage and gives you the option to encrypt the data.
-	Layout Managers – Gives you the ability to add custom layout logic to views in your applications
-	User Navigation management – Uses conditional logic to test whether the user is allowed to navigate to a view by specifying a URL or by clicking on the back or forward buttons.
-	Usability enhancements – Helps you with debugging, provides an extensible UIP schema, and provides a shared view for common transition points.





